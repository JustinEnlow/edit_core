// do full doctests or unit tests for each item before moving on to the next

[x] set up client-server connections
[x] set up client-server to pass plain text messages
[x] set up client-server to pass serialized messages back and forth
// client-server as doc viewer at this point will send buffer with all lines in specified view area, not a diff/just the changes
[x] set up client-server as document viewer with no scrolling or view size changes
[x] set up client-server as document viewer with changeable view size
[x] set up client-server as document viewer with scrolling detached from cursor position
[x] set up client-server as document viewer with scrolling attached to cursor position
    [x] move/extend selection right
    [x] move/extend selection left
    [x] move/extend selection up
    [x] move/extend selection down
    [x] restrict cursor to line start/end
    [x] restrict cursor to document start/end
    [x] cursor left at line start moves to previous line end if available
    [x] cursor right at line end moves to next line start if available
    [x] make cursor maintain horizontal position or go to line end when moving up/down
    [ ] when selection is extended and cursor moves, collapse selection cursors. + test
[x] set up client-server with editing functionality
    [x] insert
    [x] remove
    [ ] figure out how to handle proper tabs, instead of inserting spaces
    [ ] perform edits over selections in reverse order to ensure edits do not effect subsequent selection positions in reference text
[x] set up client-server to save documents
[x] set up client-server to handle multiple client connections
[ ] handle multiple selections(should selections be attached to a document, or a client instance of said document?)
    [x] make Selection struct containing head and anchor components
    [x] make Vec<Selection> for holding data for multiple selections
    [ ] ensure selection(s) are sorted by position in reference text
    [ ] create functions to add selection above/below
    [ ] is multi-selection stuff related to find/replace selections?
    [x] delete selected text(delete, backspace, insert)
    [ ] combine overlapping selections. prob needs to be checked at each extend selection fn



// not in a specific order
[ ] make movements/edits that result in the same state return an error. this allows the front end application to decide whether to display a warning message, giving visual feedback
[x] define cursor semantic enum(bar/block)
    [ ] handle all document functionality using different cursor semantics

[ ] have client pass client view in ServerAction::OpenFile
[ ] have ServerAction::OpenFile return a client id
